{"version":3,"sources":["components/Signin/Signin.js","components/Register/Register.js","components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkFrom.js","components/FaceDetection/FaceDetection.js","components/Rank/Rank.js","App.js","serviceWorker.js","index.js","components/Logo/Shadowcyng.png"],"names":["Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","res","json","data","loadUser","status","onRouteChange","document","getElementById","textContent","this","className","id","htmlFor","onChange","type","name","pattern","title","onClick","href","React","Component","Register","onNameChange","registerName","registerEmail","registerPassword","onRegister","registeremail","registerpassword","Navigation","isSignedIn","style","display","justifyContent","Logo","options","max","height","width","alt","src","Shadowcyng","ImageLinkForm","onInputChange","onButtonClick","placeholder","FaceDetection","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Rank","entries","PaticlesOption","particles","number","density","enable","value_area","color","initialState","input","route","user","joined","App","componentDidMount","console","log","catch","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","BoundingBox","response","count","Object","assign","err","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.8d5406c2.chunk.js","sourcesContent":["import React  from 'react';\r\n\r\nclass Signin  extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      signInEmail:'',\r\n      signInPassword:'',\r\n    }\r\n  }\r\n  onEmailChange=(event)=>{\r\n    this.setState({signInEmail: event.target.value})\r\n      }\r\n      onPasswordChange=(event)=>{\r\n        this.setState({signInPassword: event.target.value})\r\n          }\r\n    \r\n      onSubmitSignIn=()=>{\r\n        fetch('https://cryptic-sierra-52852.herokuapp.com/signin',{\r\n          method:'post',\r\n          headers:{'content-type':'application/json'},\r\n          body:JSON.stringify({\r\n            email:  this.state.signInEmail,\r\n            password: this.state.signInPassword\r\n          })\r\n        }).then(res => {\r\n          res.json().then(data=>this.props.loadUser(data));\r\n          if(res.status===200){\r\n            this.props.onRouteChange('home');\r\n         }\r\n         else{\r\n            document.getElementById('err').textContent = 'User not found! Try Again.';\r\n         }\r\n         })\r\n        \r\n         } \r\n  render(){\r\n    const{onRouteChange} = this.props;\r\n    return(\r\n      <article className=\"br3 shadow-5 b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\r\n       <main className=\"pa4 black-80\">\r\n        <div className=\"measure \">\r\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n            <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n            <div className=\"mt3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n              <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n               onChange={this.onEmailChange}\r\n               type=\"email\" \r\n               name=\"email-address\"  \r\n               id=\"email-address\"\r\n               pattern=\"/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i\"\r\n               title=\"Enter valid email formate\"\r\n               />\r\n            </div>\r\n            <div className=\"mv3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n              <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n               onChange={this.onPasswordChange}\r\n               type=\"password\" \r\n               name=\"password\" \r\n                id=\"password\"\r\n                pattern=\" /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{4,16$/\"\r\n                title=\"Passowrd should have altleast one uppercase, 1 lowercase and 1 number.\r\n                and min length is 4 max length is 16\"\r\n                />\r\n            </div>\r\n            </fieldset>\r\n          <div className=\"\">\r\n            <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n            type=\"submit\" \r\n            value=\"Sign in\" \r\n            onClick={()=>this.onSubmitSignIn()}/>\r\n          </div>\r\n          <div className=\"lh-copy mt3\">\r\n            <a href=\"#0\" className=\"f6 link dim black db pointer\"\r\n            onClick={() => onRouteChange('register')}\r\n            >Register</a>\r\n          </div>\r\n          <div className='lh-copy mt3 b red'>\r\n         \r\n          <p id='err'></p>\r\n          </div>\r\n           </div>\r\n      </main>\r\n      </article>\r\n      \r\n      );\r\n  }\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\nclass Register  extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      registerName:'',\r\n      registeremail:'',\r\n      registerpassword:''\r\n    }\r\n  }\r\n  onNameChange=(event)=>{\r\n    this.setState({registerName:event.target.value});\r\n  }\r\n  onEmailChange=(event)=>{\r\n    this.setState({registerEmail:event.target.value});\r\n  }\r\n  onPasswordChange=(event)=>{\r\n    this.setState({registerPassword:event.target.value});\r\n  }\r\n  onRegister=()=>{\r\n    fetch('https://cryptic-sierra-52852.herokuapp.com/register',{\r\n      method:'post',\r\n      headers:{'content-type':'application/JSON'},\r\n      body:JSON.stringify({\r\n        name:this.state.registerName,\r\n        email:this.state.registerEmail,\r\n        password:this.state.registerPassword\r\n      })\r\n    }).then(res => {\r\n      res.json().then(data=>this.props.loadUser(data));\r\n      if(res.status===200){\r\n        this.props.onRouteChange('home');\r\n     }\r\n     else{\r\n        document.getElementById('err').textContent = 'Unable to Register! Try Again ';\r\n     }\r\n     })\r\n\r\n    \r\n  }\r\n  render(){\r\n    const{onRouteChange} = this.props\r\n    return(\r\n      <article className=\"br3 shadow-5 b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\r\n       <main className=\"pa4 black-80\">\r\n        <div className=\"measure \">\r\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n            <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n            <div className=\"mv3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"Name\">Name</label>\r\n              <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n              onChange={this.onNameChange}\r\n              type=\"text\"\r\n               name=\"name\"  \r\n              id=\"name\" \r\n              pattern=\"/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/\"\r\n              title=\"Enter valid name\"\r\n              />\r\n            </div>\r\n            <div className=\"mv3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n              <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n               onChange={this.onEmailChange}\r\n               type=\"email\" \r\n               name=\"email-address\"  \r\n               id=\"email-address\" \r\n               pattern=\"/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i\"\r\n               title=\"Enter valid email\"\r\n               />\r\n            </div>\r\n            <div className=\"mv3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n              <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n               onChange={this.onPasswordChange}\r\n               type=\"password\" \r\n               name=\"password\" \r\n                id=\"password\"\r\n                pattern=\" /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{4,16$/\"\r\n                title=\"Passowrd should have altleast one uppercase, 1 lowercase and 1 number.\r\n                and min length is 4 max length is 16\"\r\n                />\r\n            </div>\r\n            </fieldset>\r\n          <div className=\"\">\r\n            <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n            type=\"submit\" \r\n            value=\"Register\" \r\n            onClick={this.onRegister}/>\r\n          </div>\r\n          <div className=\"lh-copy mt3\">\r\n            <a href=\"#0\" className=\"f6 link dim black db\"\r\n            onClick={() => onRouteChange('signin')}>Sign In</a>\r\n          </div>\r\n          <div className='lh-copy mt3 b red'>\r\n         <p id='err'></p>\r\n         </div>\r\n        </div>\r\n      </main>\r\n      </article>\r\n      \r\n      );\r\n  }\r\n\r\n}\r\nexport default Register;","import React  from  'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n if(isSignedIn){\r\n    return( \r\n      <nav style={{display:'flex', justifyContent:'flex-end' }}>\r\n        <p className='f3 link dim black pointer underline pa3'\r\n        onClick={()=>onRouteChange('signout')} > Sign Out </p>\r\n    </nav>        \r\n)}else{\r\n    return(\r\n        <nav style={{display:'flex', justifyContent:'flex-end' }}>\r\n        <p className='f3 link dim black pointer underline pa3'\r\n        onClick={()=>onRouteChange('signiny')} > Sign In </p>\r\n        <p className='f3 link dim black pointer underline pa3'\r\n        onClick={()=>onRouteChange('register')} > Register </p>\r\n    </nav> \r\n    );\r\n}\r\n}\r\nexport default  Navigation;\r\n","import React  from  'react';\r\nimport Tilt from 'react-tilt';\r\nimport Shadowcyng from './Shadowcyng.png'\r\nimport './Logo.css';\r\nconst Logo = () => {\r\n    return(<div className='ma3 mt0'>\r\n        <Tilt className=\"Tilt br2 shadow-2\" options={{ max :60 }} style={{ height:150, width: 150 }} >\r\n         <div className=\"Tilt-inner pa3\"> \r\n         <img alt='Logo' src={Shadowcyng}/>\r\n          </div>\r\n        </Tilt>\r\n        </div>\r\n    );\r\n}\r\nexport default  Logo;\r\n","import React  from  'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonClick}) => {\r\n    return(\r\n<div>\r\n    <p className='f3' >{'This Magic Brain will detect faces in your pictures. Give it a try.'}</p>\r\n    <div className='center '>\r\n        <div className='center form pa4 br3 shadow-5'>\r\n            <input  onChange={onInputChange} type='text' className='f4 pa2 w-70 center ' placeholder='Enter Image URL...'/>\r\n            <button onClick={onButtonClick} className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'>\r\n                Detect\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n    );\r\n}\r\nexport default ImageLinkForm;\r\n","import React from 'react';\r\nimport './FaceDetection.css';\r\nconst FaceDetection = ({imageUrl,box}) =>{\r\n    return (               \r\n<div className='center ma'>\r\n   <div className='absolute mt2'>\r\n   <img id='inputImage' src={imageUrl}  alt='' width='500px' height='auto'/> \r\n   <div className='bounding-box' style={{top:box.topRow, right:box.rightCol, bottom:box.bottomRow, left:box.leftCol}}></div>\r\n   </div>\r\n</div>\r\n    );\r\n}\r\nexport default FaceDetection;","import React from 'react';\r\nconst Rank =  ({name, entries}) =>{\r\n        return(\r\n            <div>\r\n                <div className='white f3'>\r\n                    {/* {console.log(name)}\r\n                    {console.log(enteries)} */}\r\n                   {`${name}, your Current Rank...  `}\r\n                </div>\r\n                <div className='white f1 font'>\r\n                    {`${entries}`}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default Rank;","import React, { Component } from 'react';\nimport './App.css';\nimport Signin from './components/Signin/Signin'\nimport Register from './components/Register/Register'\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkFrom';\nimport FaceDetection from './components/FaceDetection/FaceDetection';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\n\nconst PaticlesOption = {\n  particles: {\n   number: {\n      value:100,\n      density: {\n        enable: true,\n        value_area:700,  \n      }\n     \n    },\n    color:{\n      value:'#ff5edf',\n    },\n  }\n}\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route:'signin',\n  isSignedIn:false,\n  user:{\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    entries: 0,\n    joined: ''\n        }\n}\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = initialState\n\n\n    }\n\n  loadUser=(data)=>{\n    this.setState({user : {\n    id: data.id,\n    name: data.name,\n    email: data.email,\n    entries: data.entries,\n    joined: data.joined\n      }  }) \n    }\n\n  componentDidMount=()=>{\n    fetch('https://cryptic-sierra-52852.herokuapp.com/')\n    .then(res=>res.json()).then(data=>console.log(data)).catch(console.log)\n  }\n\n  calculateFaceLocation=(data)=>{\n    const clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width= Number(image.width);\n    const height= Number(image.height);\n    return({\n      leftCol: clarifaiFace.left_col*width,\n      topRow: clarifaiFace.top_row*height,\n      rightCol: width - (clarifaiFace.right_col*width),\n      bottomRow: height - (clarifaiFace.bottom_row*height),\n  })\n\n  }\n  \n  displayFaceBox=(BoundingBox) =>{\n    this.setState({box:BoundingBox});\n  }\n  onRouteChange= (route) => {\n    if(route==='signout'){\n      this.setState(initialState)\n    }\n    if(route === 'home'){\n      this.setState({isSignedIn:true})\n    }\n    this.setState({route:route});\n  }\n\n  onInputChange = (event) =>{\n    this.setState({input:event.target.value});\n  }\n  onButtonClick = () =>{\n    this.setState({imageUrl:this.state.input});\n    console.log(this.state.input);\n    fetch('https://cryptic-sierra-52852.herokuapp.com/imageAPI',{\n      method:'post',\n      headers:{'content-type':'application/json'},\n      body:JSON.stringify({\n        input : this.state.input\n      })\n    }).then(res=>res.json())\n      .then(response =>{\n        console.log(response)\n        if(response){\n          fetch('https://cryptic-sierra-52852.herokuapp.com/image',{\n            method:'put',\n            headers:{'content-type':'application/json'},\n            body:JSON.stringify({\n            id:this.state.user.id,\n            })\n          }).then(res=>res.json()).then(count=>{\n            Object.assign(this.state.user,{entries:count})\n          }).catch(err=>console.log('err',err))\n        }\n      this.displayFaceBox(this.calculateFaceLocation(response)\n      )}\n      ).catch(err=>console.log('Something went wrong',  err));\n  }\n  render(){\n    const {user,imageUrl,box,route,isSignedIn} = this.state;\n  return (\n    <div className=\"App\">\n <Particles className='particles' params={PaticlesOption} />\n\n      <Navigation\n      onRouteChange={this.onRouteChange}\n      isSignedIn={isSignedIn} />\n\n    {route==='home'?\n    <div><Logo />\n    <Rank \n    name={user.name}\n    entries={user.entries}\n    />\n    <ImageLinkForm \n    onInputChange={this.onInputChange} \n    onButtonClick={this.onButtonClick}/>\n   <FaceDetection \n    imageUrl={imageUrl}\n    box={box}/>\n   </div>\n      : ((route==='signin' || route==='signout') ?\n      <Signin onRouteChange={this.onRouteChange}\n        loadUser = {this.loadUser}\n      />\n      : \n      <Register onRouteChange={this.onRouteChange}\n      loadUser={this.loadUser}\n      />\n     \n      )\n    } \n    </div>\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n\n    <App/>,\n      document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Shadowcyng.2fe4d0d9.png\";"],"sourceRoot":""}